{"version":3,"sources":["Statistical/Statistical.module.css","FriendList/FriendList.module.css","Profile/Profile.module.css","TransactionHistory/TransactionHistory.module.css","Profile/Profile.jsx","Statistical/Statistical.jsx","FriendList/FriendList.jsx","TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","src","alt","s","statItem","followers","views","likes","Statistical","title","statistics","list","map","stat","item","label","percentage","id","FriendList","friends","friend","isOnline","green","red","width","TransactionHistory","items","transactionTistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93846176.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistical_item__1RMMo\",\"list\":\"Statistical_list__MUuPT\",\"statistics\":\"Statistical_statistics__-hNac\",\"title\":\"Statistical_title__2dqRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"FriendList_red__rGhrB\",\"green\":\"FriendList_green__3wkxk\",\"item\":\"FriendList_item__TCqYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__1A-zr\",\"stats\":\"Profile_stats__22K2l\",\"statItem\":\"Profile_statItem__l65YC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionTistory\":\"TransactionHistory_transactionTistory__1fQIF\"};","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\nexport default function Profile({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className='profile'>\r\n      <div className='description'>\r\n        <img src={avatar} alt='Аватар пользователя' className={s.avatar} />\r\n        <p className='name'>{name}</p>\r\n        <p className='tag'>@{tag}</p>\r\n        <p className='location'>{location}</p>\r\n      </div>\r\n      <ul className={s.stats}>\r\n        <li className={s.statItem}>\r\n          <span className='label'>Followers </span>\r\n          <span className='quantity'>{stats.followers}</span>\r\n        </li>\r\n        <li className={s.statItem}>\r\n          <span className='label'>Views </span>\r\n          <span className='quantity'>{stats.views}</span>\r\n        </li>\r\n        <li className={s.statItem}>\r\n          <span className='label'>Likes </span>\r\n          <span className='quantity'>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistical.module.css';\r\nexport default function Statistical({ title, stats }) {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s.list}>\r\n        {stats.map((stat) => (\r\n          <li key={stat.id} className={s.item}>\r\n            <span className={s.label}>{stat.label} </span>\r\n            <span className={s.percentage}>{stat.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\nStatistical.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {friends.map((friend) => (\r\n        <li key={friend.id} className={s.item}>\r\n          <span className={friend.isOnline ? s.green : s.red}></span>\r\n          <img className={s.avatar} src={friend.avatar} alt={friend.name} width='48' />\r\n          <p className={s.name}>{friend.name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nFriendList.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className={s.transactionTistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\nTransactionHistory.propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n","import './App.css';\nimport Profile from './Profile/Profile';\nimport user from './Profile/user.json';\nimport Statistical from './Statistical/Statistical.jsx';\nimport statisticalData from './Statistical/statistical-data.json';\nimport FriendList from './FriendList/FriendList.jsx';\nimport friends from './FriendList/friends.json';\nimport TransactionHistory from './TransactionHistory/TransactionHistory.jsx';\nimport transactions from './TransactionHistory/transactions.json';\nfunction App() {\n  return (\n    <div className='App'>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistical title='Upload stats' stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}